// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  SUPER_ADMIN
  ADMIN
  CUSTOMER
  USER
}

enum Status {
  ACTIVE
  INACTIVE
  DELETED
}

model User {
  id               String     @id @default(cuid())
  email            String     @unique
  password         String
  codeVerification Int?
  isVerified       Boolean    @default(false)
  role             Role
  createdAt        DateTime   @default(now())
  updatedAt        DateTime   @updatedAt

  pharmacy         Pharmacy?
  employee         Employee?
}

model Pharmacy {
  id           String     @id @default(cuid())
  name         String
  description  String?
  profilePhoto String
  coverPhoto   String
  address      String?
  phone        String
  email        String?
  status       Status
  userId       String     @unique
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt

  employees    Employee[]
  user         User       @relation(fields: [userId], references: [id])
}

model Employee {
  id             String     @id @default(cuid())
  firstName      String
  secondName     String?
  thirdName      String?
  firstLastname  String
  secondLastname String?
  dui            String
  numberPhone    String
  email          String?
  address        String?
  status         Status
  userId         String     @unique
  pharmacyId     String     @unique
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt

  user           User       @relation(fields: [userId], references: [id])
  pharmacy       Pharmacy   @relation(fields: [pharmacyId], references: [id])
}

